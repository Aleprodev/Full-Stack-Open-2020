{"version":3,"sources":["components/filter.js","components/personform.js","components/persons.js","services/numbers.js","components/notification.js","App.js","index.js"],"names":["Filter","value","onChange","PersonForm","props","addName","newName","handleNewName","newNumber","handleNewNumber","onSubmit","type","Persons","persons","filterTerm","handleClick","map","person","name","toLowerCase","includes","Fragment","number","id","onClick","baseUrl","numberServices","getAll","axios","get","create","newObject","post","delNum","delete","update","put","Notification","message","className","App","useState","setPersons","setNewName","setNewNumber","setFilterTerm","setMessage","error","setError","useEffect","then","response","data","nameAccepted","nameObject","concat","setTimeout","catch","replaceNumber","confirmReplace","window","confirm","find","p","changedNumber","event","target","preventDefault","filter","length","result","reactDom","render","document","getElementById"],"mappings":"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","file":"static/js/main.f7c3dc75.chunk.js","sourcesContent":["import React from 'react'\n\nconst Filter = ({ value, onChange }) => {\n  return(\n  <div>\n    Filter shown with <input value={value} onChange={onChange} />\n  </div>\n  )\n}\n\nexport default Filter","import React from 'react'\r\n\r\nconst PersonForm = (props) => {\r\n  const { addName, newName, handleNewName, newNumber, handleNewNumber } = props\r\n  return (\r\n    <div>\r\n      <form onSubmit={addName}>\r\n        <div>Name: <input value={newName} onChange={handleNewName} /></div>\r\n        <div>Number: <input value={newNumber} onChange={handleNewNumber} /></div>\r\n        <div><button type='submit'>add</button></div>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PersonForm","import React from 'react'\n\nconst Persons = ({ persons, filterTerm, handleClick }) => {\n  return (\n    <div>\n      {persons.map((person) =>\n        person.name.toLowerCase().includes(filterTerm.toLowerCase()) &&\n        (<React.Fragment key={person.id}>\n          <p>\n            {`${person.name} ${person.number} `}\n            <button name={person.name} id={person.id} onClick={handleClick}>\n              Delete\n            </button>\n          </p>\n        </React.Fragment>)\n      )}\n    </div>\n  )\n}\n\nexport default Persons","import axios from 'axios'\nconst baseUrl = '/api/persons'\n\nconst getAll = () => axios.get(baseUrl);\n\nconst create = newObject => {\n  return axios.post(baseUrl, newObject)\n};\n\nconst delNum = (id) => {\n  return axios.delete(`${baseUrl}/${id}`)\n};\n\nconst update = (id, newObject) => {\n  return axios.put(`${baseUrl}/${id}`, newObject)\n}\n\nconst numberServices = { getAll, create, delNum, update }\n\nexport default numberServices;","import React from 'react';\n\nconst Notification = ({ message, className }) => {\n  if (message === null) {\n    return null\n  }\n\n  return (\n    <div className={className}>\n      {message}\n    </div>\n  )\n};\n\nexport default Notification;","import React, { useState, useEffect } from 'react';\nimport Filter from './components/filter';\nimport PersonForm from './components/personform';\nimport Persons from './components/persons';\nimport numberServices from './services/numbers';\nimport Notification from './components/notification';\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  const [newName, setNewName] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [filterTerm, setFilterTerm] = useState('')\n  const [message, setMessage] = useState(null)\n  const [error, setError] = useState('message')\n\n  useEffect(() => {\n    numberServices\n      .getAll()\n      .then(response => {\n        setPersons(response.data)\n      })\n  }, []);\n\n  const addName = (event) => {\n    event.preventDefault()\n\n    if (newName === '' && newNumber === '') {\n      setMessage('Name and number must not be empty')\n      setTimeout(() => {\n        setMessage(null)\n      }, 5000);\n    }\n\n    else {\n      const personExist = persons.filter((person) =>\n        person.name.toLowerCase() === newName.toLowerCase()).length\n\n      if (!personExist) {\n        nameAccepted()\n      }\n\n      else {\n        replaceNumber()\n      }\n    }\n  };\n\n  const nameAccepted = () => {\n    const nameObject = {\n      name: newName,\n      number: newNumber,\n    }\n\n    numberServices\n      .create(nameObject)\n      .then(response => {\n        setPersons(persons.concat(response.data))\n        setMessage(`Added ${response.data.name} successfully`)\n        setNewName('')\n        setNewNumber('')\n        setTimeout(() => {\n          setMessage(null)\n        }, 5000);\n      })\n      .catch(error => {\n        setMessage(error.response.data.error)\n        setTimeout(() => {\n          setMessage(null)\n        }, 5000);\n      })\n\n    return message\n  };\n\n  const replaceNumber = () => {\n    const confirmReplace = window.confirm(\n      `${newName} is already added to the phonebook, replace the old number with a new one?`\n    )\n\n    const person = persons.find(p => p.name === newName)\n    const changedNumber = { ...person, number: newNumber }\n\n    if (confirmReplace) {\n      numberServices\n        .update(person.id, changedNumber)\n        .then(response => {\n          setPersons(persons.concat(response.data))\n          setMessage('Number changed successfully')\n          setNewName('')\n          setNewNumber('')\n          setTimeout(() => {\n            setMessage(null)\n          }, 5000);\n        })\n        .catch(() => {\n          setError('error')\n          setMessage(`Information of ${newName} has already been removed from server`)\n          setTimeout(() => {\n            setMessage(null)\n          }, 5000);\n        })\n    }\n  };\n\n  const handleNewName = (event) => {\n    setNewName(event.target.value)\n  };\n\n  const handleNewNumber = (event) => {\n    setNewNumber(event.target.value)\n  };\n\n  const handleFilterTerm = (event) => {\n    setFilterTerm(event.target.value)\n  };\n\n  const handleClick = (event) => {\n    const name = event.target.name\n    const id = event.target.id\n    const confirm = window.confirm(`Delete ${name}?`)\n\n    if (confirm === true) {\n      numberServices\n        .delNum(id)\n        .then(result => {\n          setPersons(persons.filter(person => person.id !== id))\n          setMessage('Deleted successfully')\n          setTimeout(() => {\n            setMessage(null)\n          }, 5000);\n        })\n        .catch(error => {\n          setMessage(`${name} has already removed from server`)\n          setTimeout(() => {\n            setMessage(null)\n          }, 5000);\n        })\n    }\n  };\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={message} className={error} />\n      <Filter value={filterTerm} onChange={handleFilterTerm} />\n\n      <h2>Add a new</h2>\n      <PersonForm\n        addName={addName}\n        newName={newName}\n        handleNewName={handleNewName}\n        newNumber={newNumber}\n        handleNewNumber={handleNewNumber}\n      />\n\n      <h2>Numbers</h2>\n      <Persons\n        persons={persons}\n        filterTerm={filterTerm}\n        handleClick={handleClick}\n      />\n    </div>\n  )\n};\n\nexport default App;","import React from 'react';\nimport reactDom from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nreactDom.render(\n  <App />,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}